How did viewing a diff between two versions of a file help you see the bug that
was introduced?

We dont need to go through long lines of code and can easily find
the difference bwtween them.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

If we want to know what are the changes we can easily find out and
if we want to look at the older version we can do that too.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Because sometimes we usually forget to save our work manually but if it done
automatically then we will never loose our work.

Sometimes we dont want to save our work we are just trying out the different things 
so automatically saving saving work will not be useful in that case.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because sometimes we need to make changes to some files and sometimes to 
multiple files. Moreover in Git adding one functionality can lead to changes 
in many other files.

How can you use the commands git log and git diff to view the history of files?
We can type git log that will highlight all the changes made to the file 
in the form of insertions and deltions.


How might using version control make you more confident to make changes that
could break something?

It makes us more confident because we can go back to out previous commits and
check when the error occurs and find the mistake.

Now that you have your workspace set up, what do you want to try using Git for?
I want to try git for everything and every project I make because i will be able 
to revert my changes back if ant error found